)
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.freq = 200, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
warnings()
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.freq = 100, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
warnings()
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 50, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 100, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 500, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
welfare$sex <- ifelse(welfare$sex == 1,"male","female")
table(welfare$sex)
ggplot(welfare)
ggplot(welfare$sex)
ggplot(welfare.sex)
ggplot(welfare$sex)
library(ggplot2)
ggplot(welfare$sex)
raw_welfare= read.spss(file = "data/Koweps_hpc10_2015_beta1.sav",to.data.frame = T)
raw_welfare= read.spss(file = "data/Koweps_hpc10_2015_beta1.sav",to.data.frame = T)
head(raw_welfare)
head(raw_welfare)
# 복사본
welfare <- raw_welfare
welfare <- rename(welfare, sex=h10_g3, birth=h10_g4, marriage=h10_g10,
religion=h10_g11, income=p1002_8aq1, code_job=h10_eco9,
code_region=h10_reg7)
welfare <- welfare[,c("sex","birth","marriage","religion","income","code_job","code_region")]
head(welfare)
class(welfare)
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 1,"male","female")
table(welfare$sex)
# 월급 변수 검토
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$sex)
qplot(welfare$income) + xlim(0,1000)
#월급변수에 대한 전처리 ,결측치
welfare$income <- ifelse(welfare$income %>% c(0,9999),NA,welfare$income)
#월급변수에 대한 전처리 ,결측치
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA,welfare$income)
table(is.na(welfare$income))
#성별에 따른 평균 급여
welfare %>% group_by(sex) %>% summarise(mean_income =mean(income))
#성별에 따른 평균 급여
welfare %>% filter(is.na(income)) %>%group_by(sex) %>% summarise(mean_income =mean(income))
#성별에 따른 평균 급여
welfare %>% filter(!is.na(income)) %>%group_by(sex) %>% summarise(mean_income =mean(income))
qplot(welfare$income)
qplot(welfare$income) + xlim(0,1000)
ggplot(data=sex_income, aes(x=sex, y=mean_income)) +geom_col()
#성별에 따른 평균 급여
sex_income <-welfare %>% filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income =mean(income))
ggplot(data=sex_income, aes(x=sex, y=mean_income)) +geom_col()
#나이 변수 검토
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
# 이상치 확인
summary(welfare$birth)
#결측치 확인
table(is.na(welfare$birth))
#파생 변수 작성 : age
welfare$age <- 2015 - welfare$birth +1
summary(welfare$age)
qplot(welfare$age)
# 나이대별 월급여 평균
age_income <-welfare %>% filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income_age =mean(income))
ggplot(data= age_income, aes(x=age,y=mean_income_age)) + geom_line()
library(ggplot2)
str(ggplot2::mpg)
head(ggplot2::mpg)
mpg <- as.data.frame(ggplot2::mpg)
mpg %>% filter(hwy<=4 | hwy >=5)
mpg %>% filter(hwy<=4 | hwy >=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
mpg %>% filter(hwy<=4) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
mpg %>% filter(displ<=4) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
mpg %>% filter(displ>=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
pie(table(gender))
#결측치 처리
#---------------------
dataset1<-read.csv("data/dataset.csv",header = T)
View(dataset1)
str(dataset1)
y<-dataset1$price
plot(y)
attach(dataset1)
price
detach(dataset1)
price
# 결측치 확인하기
summary(price)
# 결측치 제거
sum(price,na.rm = T) # NA
price2 <- na.omit(price)
sum(price2)
#결측치 대체
data <- ifelse(!is.na(vec),vec,0)
### 이상치 처리
#----------------
table(gender)
pie(table(gender))
#연령대로 범주화
# 초년 (30대 미만),중년 (30~59),노년(60세 이상)
welfare <- welfare %>%
mutate(ageg = ifelse(age<30, "young",ifelse(age<=59,"middle","old")))
table(welfare)
table(welfare$ageg)
qplot(welfare$ageg)
age_income <-welfare %>% filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income_age =mean(income))
ggplot(data= age_income, aes(x=age,y=mean_income_age)) + geom_line()
age_income <-welfare %>% filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income_age =mean(income))
ggplot(data= age_income, aes(x=age,y=mean_income_age)) + geom_line()
head(age_income)
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_line()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_boxplot()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_boxt()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_box()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_boxplot()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_col()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_hline()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_line()
ggplot(data= age_income, aes(x=ageg,y=mean_income_age)) + geom_col() + scale_x_discrete(limits=c("young","middle","old"))
# 각 연령대별 성별 월급 차이 분석
age_sex_income < welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income =  mean(income))
# 각 연령대별 성별 월급 차이 분석
age_sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income =  mean(income))
head(age_sex_income)
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex()))+geom_col()+
scale_x_discrete(limits = c("young","middle","old"))
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex)+geom_col()+
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex)+geom_col()+
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex))+geom_col()+
scale_x_discrete(limits = c("young","middle","old"))
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex))+geom_col()+
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex))+geom_col()+
scale_x_discrete(limits=c("young","middle","old"))
ggplot(data =  age_sex_income, aes(ageg, mean_income,fill=sex))+geom_col(position = "dodge")+
scale_x_discrete(limits=c("young","middle","old"))
# 나이대 별
age_sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age,sex) %>%
summarise(mean_income =  mean(income))
head(age_sex_income)
ggplot(data =  age_sex_income, aes(ageg, mean_income,col=sex))+geom_line()
ggplot(data =  age_sex_income, aes(age, mean_income,col=sex))+geom_line()
# 직업 변수 검토
class(welfare$code_job)
table(welfare$code_job)
list_job <- read_excel("data/Koweps_Codebook.xlsx",sheet = 2, col_names = T)
head(list_job)
dim(list_job)
left_join(welfare,list_job,id="code_job")
welfare <- left_join(welfare,list_job,id="code_job")
head(welfare)
welfare %>% filter(!is.na(code_job)) %>% select(code_job,job) %>% head(10)
# 직업별로 평균 급여 구하기
welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(code_job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(desc(job_income_mean))
# 직업별로 평균 급여 구하기
welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(desc(job_income_mean))
# 직업별로 평균 급여 구하기
welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(desc(job_income_mean)) %>% head(10)
bottom10 <-welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(job_income_mean) %>% head(10)
bottom10 <-welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(job_income_mean) %>% head(10)
bottom10
#그래프로 표시해보기
ggplot(top10,aes(reoder(job,job_income_mean),job_income_mean)) + geom_col()
# 직업별로 평균 급여 구하기
top10 <-welfare %>% filter(!is.na(income) & !is.na(code_job)) %>% group_by(job) %>%
summarise(job_income_mean = mean(income)) %>% arrange(desc(job_income_mean)) %>% head(10)
(
#그래프로 표시해보기
ggplot(top10,aes(reoder(job,job_income_mean),job_income_mean)) + geom_col()
#그래프로 표시해보기
ggplot(top10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col()
#그래프로 표시해보기
ggplot(top10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col()
#그래프로 표시해보기
ggplot(top10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col() + coord_flip()
ggplot(bottom10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col() + coord_flip() + ylim(0,850)
#그래프로 표시해보기
ggplot(top10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col() + coord_flip()
ggplot(bottom10,aes(reorder(job,job_income_mean),job_income_mean)) + geom_col() + coord_flip() + ylim(0,850)
# 성별 직업 분포
job_female <- welfare %>%
filter(!is.na(job) & sex=="female") %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
ggplot(job_female, aes(reorder(job,n),n)) + geom_col()+ coord_flip()
# 변수 검토
class(welfare$religion)
table(welfare$religion)
# 종교 유무에 따른 1:yes 2:no
welfare$religion <- ifelse(welfare$religion==1,"yes","no")
head(welfare)
table(welfare$religion)
qplot(welfare$religion)
qplot(welfare$religion)
# 혼인변수 검토
class(welfare$marriage)
table(welfare$marriage)
welfare$group_marriage <- ifelse(welfare$marriage==1,"marriage",ifelse(welfare$marriage==3,"divorce","NA"))
table(welfare$group_marriage)
qplot(welfare$group_marriage)
religion_marraige <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion,group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group= sum(n)) %>%
mutate(pct = round(n/tot_group *100,1))
religion_marraige
religion_marraige <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion,group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group= sum(n)) %>%
mutate(pct = round(n/tot_group *100,1))
religion_marraige
welfare$group_marriage <- ifelse(welfare$marriage==1,"marriage",ifelse(welfare$marriage==3,"divorce",NA))
table(welfare$group_marriage)
qplot(welfare$group_marriage)
religion_marraige <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion,group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group= sum(n)) %>%
mutate(pct = round(n/tot_group *100,1))
religion_marraige
divorse <- religion_marraige %>% filter(group_marriage=="divorce") %>% select(religion, pct)
divorse
# 연령대별로 이혼율을 작성
ageg_marraige <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg,group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group= sum(n)) %>%
mutate(pct = round(n/tot_group *100,1))
head(ageg_marraige)
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_divorce %>% filter(ageg="young" & group_marriage="divoce") %>% select(ageg,pct)
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_divorce %>% filter(ageg=="young" & group_marriage=="divoce") %>% select(ageg,pct)
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_marraige %>% filter(ageg=="young" & group_marriage=="divoce") %>% select(ageg,pct)
head(ageg_divorce)
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_marraige %>% filter(ageg=="young" & group_marriage=="divoce") %>% select(ageg,pct)
ageg_divorce
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_marraige %>% filter(ageg!="young" & group_marriage=="divoce") %>% select(ageg,pct)
ageg_divorce
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_marraige %>% filter(ageg!="young" & group_marriage=="divoce") %>% select(ageg,pct)
ageg_divorce
#초년은 제외하고 노년과 중년에서의 이혼율표를 다시 작성
ageg_divorce <- ageg_marraige %>% filter(ageg!="young" & group_marriage=="divorce") %>% select(ageg,pct)
ageg_divorce
#결측치 처리
#---------------------
dataset1<-read.csv("data/dataset.csv",header = T)
View(dataset1)
str(dataset1)
y<-dataset1$price
plot(y)
length(price)
attach(dataset1)
price
length(price)
#2
---
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(ratio_child=(poptotal-popadults)/poptotal*100)
midwest <- as.data.frame(ggplot2::midwest)
#2
---
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(ratio_child=(poptotal-popadults)/poptotal*100)
#1
mpg %>% filter(displ<=4 | displ>=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% group_by(displ<=4 | displ>=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% filter(displ<=4) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
View(mpg)
#1
mpg %>% filter(displ<=4 | displ>=5) %>% group_by(model) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% filter(displ<=4 | displ>=5) %>% group_by(displ) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% filter(displ<=4 | displ>=5) %>% group_by(displ<=4 | displ>=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% filter(displ<=4 | displ>=5) %>% group_by(model) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
#1
mpg %>% filter(displ<=4) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
mpg %>% filter(displ>=5) %>% summarise(hwy_mean=mean(hwy)) %>% arrange(desc(hwy_mean))
midwest <- as.data.frame(ggplot2::midwest)
#2
---
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(ratio_child=(poptotal-popadults)/poptotal*100)
#2
---
View(midwest)
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(ratio_child=(poptotal-popadults)/poptotal*100)
midwest
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(전체_인구대비_미성년_인구_백분율=(poptotal-popadults)/poptotal*100)
midwest
midwest <- as.data.frame(ggplot2::midwest)
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(전체_인구대비_미성년_인구_백분율=(poptotal-popadults)/poptotal*100) %>%
arrange(desc(전체_인구대비_미성년_인구_백분율)) %>% head(5)
midwest
# 전체 인구대비 미성년 인구 백분율(ratio_child) 변수를 추가
midwest <- midwest %>% mutate(전체_인구대비_미성년_인구_백분율=(poptotal-popadults)/poptotal*100) %>%
arrange(desc(전체_인구대비_미성년_인구_백분율)) %>% head(5) %>% select(county, 전체_인구대비_미성년_인구_백분율)
midwest
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42)
summarise(mpg)
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42)
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42)
class(mpg$drv)
table(mpg$drv)
mpg <- mpg %>% filter(drv %in% c('f','4','r'))
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10, 14, 58, 93), "drv"] <- "k"
mpg <- mpg %>% filter(drv %in% c('f','4','r'))
mpg
head(mpg,10)
mpg <- as.data.frame(ggplot2::mpg)
mpg <- mpg %>% mutate(tot=(mpg$cty + mpg$hwy) / 2)
mpg
df_comp = mpg %>% select(class=="compact")
df_comp = mpg %>% filter(class=="compact")
df_comp1 <- mpg[mpg$class == "compact", ]
df_suv1 <- mpg[mpg$class == "suv", ]
df_comp1
df_comp <- mpg %>% filter(class=="compact")
df_suv <- mpg %>% filter(class=="suv")
df_comp
df_comp %>% summarise(mean(tot))
df_suv %>% summarise((mean(tot)))
#5
#-----
ggplot(midwest,aes(x=poptotal, y=popasian))
#5
#-----
ggplot(midwest,aes(x="poptotal", y="popasian"))
#5
#-----
ggplot(midwest,aes(x="poptotal", y="popasian")) +geom_plot()
#5
#-----
ggplot(midwest,aes(x="poptotal", y="popasian")) +geom_dotplot()
#5
#-----
ggplot(midwest,aes(x="poptotal", y="popasian")) +geom_point()
#5
#-----
ggplot(midwest,aes(x=midwest$poptotal, y=midwest$popasian)) +geom_point()
#5
#-----
ggplot(midwest,aes(x=midwest$poptotal, y=midwest$popasian)) +geom_point()
# 산포도
ggplot(data=mpg, aes(x=mpg$displ,y=mpg$hwy))
ggplot(data=mpg, aes(x=mpg$displ,y=mpg$hwy)) + geom_point()
#5
#-----
ggplot(midwest,aes(x=midwest$poptotal, y=midwest$popasian)) +geom_point()
midwest <- as.data.frame(ggplot2::midwest)
#5
#-----
ggplot(midwest,aes(x=midwest$poptotal y=midwest$popasian)) +geom_point() +xlim(0,500000) + ylim(0,10000)
#5
#-----
ggplot(midwest,aes(x=midwest$poptotal,y=midwest$popasian)) +geom_point() +xlim(0,500000) + ylim(0,10000)
#6
#---
mpg %>% group_by(manufacturer) %>% filter(class=="suv")
#6
#---
mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>% summarise(maun_mean=mean(cty))
#6
#---
mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>%
summarise(manufacturer_mean=mean(cty)) %>% arrange(desc(manufacturer_mean)) %>% head(5)
#6
#---
mfc_mean <- mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>%
summarise(manufacturer_mean=mean(cty)) %>% arrange(desc(manufacturer_mean)) %>% head(5)
ggplot(mfc_mean,asc(reorder(mfc_mean$manufacturer,mfc_mean$manufacturer_mean),mfc_mean$manufacturer_mean))
ggplot(mfc_mean,aes(reorder(mfc_mean$manufacturer,mfc_mean$manufacturer_mean),mfc_mean$manufacturer_mean))
ggplot(mfc_mean,aes(reorder(mfc_mean$manufacturer,mfc_mean$manufacturer_mean),mfc_mean$manufacturer_mean)) + geom_col()
ggplot(mfc_mean,aes(reorder(mfc_mean$manufacturer,-mfc_mean$manufacturer_mean),mfc_mean$manufacturer_mean)) + geom_col()
install.packages(c("devtools", "dplyr", "dygraphs", "ggiraphExtra", "ggplot2", "plotly", "RColorBrewer", "stringr", "tibble", "wordcloud", "xts"))
install.packages(c("dplyr", "ggplot2", "plyr", "reshape2", "RMySQL", "sqldf"))
install.packages(c("httr", "xlsx", "XML"))
install.packages("stringr")
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 500, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
library(KoNLP)
library(dplyr)
library(RColorBrewer)
library(wordcloud)
install.packages("wordcloud")
###워드 클라우드
#---------------
install.packages("rlang")
install.packages("rjava")
install.packages("rJava")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RMySQL")
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 500, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)
library(wordcloud)
###워드 클라우드
#---------------
install.packages("Rcpp")
library(wordcloud)
wordcloud(words = df_word2$word, #단어 데이터
freq = df_word2$freq, #빈도수 데이터
min.freq = 5,  #최소 빈도수
max.words = 500, #최대 빈도수
random.order = F, #빈도수 단어 중앙표시
rot.per = .1, #회전비율
scale = c(2,0.1), #단어 크기 최대 최소
colors=pal2 #색상
)

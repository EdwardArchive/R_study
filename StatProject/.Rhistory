measure.vars=c("month0","month1","month2","month3","month6"))
ac2 <-reshape::melt(mydata,id=c("group","id"),variable.names ="time",
value.name="month",
measure.vars=c("month0","month1","month3","month6"))
ac2
# 시각화
?interaction.plot()
str(ac1)
ac1$group <- factor(ac1$group)
ac1$id < factor(ac1$id)
ac1$time < factor(ac1$time)
ac1$group <- factor(ac1$group)
ac1$id <- factor(ac1$id)
ac1$time <- (ac1$time)
str(ac1)
#long형으로 구조 변경
ac1<-reshape(mydata,direction = "long",varying =3:6,sep="")
ac1
str(ac1)
ac1$group <- factor(ac1$group)
ac1$id <- factor(ac1$id)
ac1$time <- factor(ac1$time)
str(ac1)
interaction.plot(ac1$time,ac1$group,ac1$month)
out <- aov(month~group*time+Error(id),ac1) #서로 다른 관점에서 조합
summary(out)
# 사후 검증
ac_0 <- ac1[ac1$time=="0",]
ac_1 <- ac1[ac1$time=="1",]
ac_3 <- ac1[ac1$time=="3",]
ac_6 <- ac1[ac1$time=="6",]
t.test(month~group,ac_0)
t.test(month~group,ac_3)
t.test(month~group,ac_6)
t.test(month~group,ac_1)
t.test(month~group,ac_0)
t.test(month~group,ac_1)
t.test(month~group,ac_3)
t.test(month~group,ac_6)
head(mtcars)
table(mtcars$am)
#자동차의 실린더 수와 변속기의 관계
table(mtcars$cyl)
# 가독성을 위해 테이블 수정
mtcars$tm <- fielse(mtcars$am==0,"automatic","manual")
# 가독성을 위해 테이블 수정
mtcars$tm <- ifelse(mtcars$am==0,"automatic","manual")
result <- table(mtcars$cyl,mtcars$tm)
result
addmargins(result)
chisq.test(result)
fisher.test(result)
str(acs)
###########################################################
# 흡연자, 비흡연자, 과거흡연자와 고혈압(HBP)의 유무 - cochran(흡연자에 트랜드(레벨이 존재함))
# cochran armitage trend test : prop.trend.test()
?prop.trend.test()
table(acs$HBP,acs$smoking)
#컬럼의 순서를 바꾸기
acs$smoking <- factor(acs$smoking, levels = c("Naver","Ex-smoker","Smoker"))
result <- table(acs$HBP,acs$smoking)
result
str(acs)
table(acs$HBP,acs$smoking)
#컬럼의 순서를 바꾸기
acs$smoking <- factor(acs$smoking, levels = c("Never","Ex-smoker","Smoker"))
result <- table(acs$HBP,acs$smoking)
result
#컬럼의 순서를 바꾸기
acs$smoking <- factor(acs$smoking, levels = c("Never","Ex-smoker","Smoker"))
str(acs)
table(acs$HBP,acs$smoking)
#컬럼의 순서를 바꾸기
acs$smoking <- factor(acs$smoking, levels = c("Never","Ex-smoker","Smoker"))
result <- table(acs$HBP,acs$smoking)
result
# x에 해당 하는 값(이벤트 발생횟수): 고혈압 발생 횟수
result[2,]
# n에 해당 하는 값(흡연 여부) : 열의 갯수
colSums(result)
prop.trend.test(x=result[2,],n=colSums(result))
mytable(smoking~age,data=acs)
# 모자이크 그래프
mosaicplot(result)
?colors()
colors()
demo("colors")
# 모자이크 그래프
mosaicplot(result,color =c("tam1","firebrick2"))
# 모자이크 그래프
mosaicplot(result,color =c("tam1","firebrick2"))
# 모자이크 그래프
mosaicplot(result,color =c("tan1","firebrick2"))
# 모자이크 그래프
mosaicplot(result,color =c("tan1","firebrick2"))
t(result)
mosaicplot(t(result),color =c("tan1","firebrick2"))
par(mfrow=c(1,1))
t(result)
mosaicplot(t(result),color =c("tan1","firebrick2"))
mosaicplot(t(result),color =c("tan1","firebrick2"),ylab = "Hypertension",xlab = "Smoking")
mydata <- read.csv("data/anova_two_way.csv")
mydata
table(mydata$ad_layer)
table(mydata$multichild)
result <- table(mydata$multichild,mydata$ad_layer)
result
prop.trend.test(x=result[2,],y=colSums(result))
prop.trend.test(x=result[2,],y=colSums(result))
prop.trend.test(x=result[2,],y=colSums(result))
prop.trend.test(x=result[2,],n=colSums(result))
t(result)
?chisq.test()
fisher.test(result) # 시군구에 따라 다자녀 조례 채택여부는 관련이 없다
install.packages("usingR")
install.packages("UsingR")
str(galton)
library(UsingR)
str(galton)
View(galton)
plot(child~parent,galton)
cor(galton$child,galton$parent)
cor.test(galton$child,galton$parent)
out <- lm(child~parent,galton)
summary(out)
abline(out,col="red")
plot(jitter(child,5)~jitter(parent,5),data = galton)
abline(out,col="red")
sunflowerplot(galton)
abline(out,col="blue")
mydata <- read.csv("data/cor.csv")
head(mydata)
str(mydata)
plot(mydata$pop_growth~mydata$elderly_rate)
cor(mydata$pop_growth,mydata$elderly_rate, method = "pearson")
plot(mydata$pop_growth~mydata$elderly_rate)
plot(mydata$pop_growth~mydata$elderly_rate) +ylim(0,50)
plot(mydata$pop_growth~mydata$elderly_rate) +ylim(50)
plot(mydata$pop_growth~mydata$elderly_rate)
cor(mydata$pop_growth,mydata$elderly_rate, method = "pearson")
cor(mydata$pop_growth,mydata$elderly_rate, method = "spearman")
# 많은 변수에 대해서 상관분석을 해야한다면
s <-  with(mydata,cbind(pop_growth,birth_rate,elderly_rate,finace,cultural_center))
# 많은 변수에 대해서 상관분석을 해야한다면
s <-  with(mydata,cbind(pop_growth,birth_rate,elderly_rate,finance,cultural_center))
cat(s)
cur(s)
cir(s)
cor(s)
##### 단순 선형회귀 #####
# y = wx + b
#--------------------------
str(wemean)
##### 단순 선형회귀 #####
# y = wx + b
#--------------------------
str(wmean)
##### 단순 선형회귀 #####
# y = wx + b
#--------------------------
str(woman)
##### 단순 선형회귀 #####
# y = wx + b
#--------------------------
str(women)
women
shapiro.test(women$height)
shapiro.test(women$weight)
plot(women$weight~women$height,women)
ln(weight~height,women) #linear model 선을 찾아주는 함수
lm(weight~height,women) #linear model 선을 찾아주는 함수
summary(fit)
fit <- lm(weight~height,women) #linear model 선을 찾아주는 함수
summary(fit)
adline(fit,col="red")
abline(fit,col="red")
cor.test(women$weight,women$height)
0.995^2
0.9954948^2
0.5^2
# 다항 회귀 분석
fit2 <- lm(weight~height + I(height^2),data = women)
firt2
fit2
summary(fit2)
lins(women$height,fitted(fit2),col="rad")
lins(women$height,fitted(fit2),col="red")
lines(women$height,fitted(fit2),col="red")
lines(women$height,fitted(fit2),col="blue")
plot(women$weight~women$height,women)
abline(fit,col="red")
lines(women$height,fitted(fit2),col="blue")
# 회귀분석의 조건 충족
plot(fit)
# 회귀분석의 조건 충족
par(mfrow=(2,2))
# 회귀분석의 조건 충족
par(mfrow=c(2,2))
plot(fit)
plot(fit2)
fit3 <- lm(weight~height + I(height^2)+ I(height^3),data = women)
summary(fit3)
plot(fit3)
########################################################################################################
mydata <- read.csv("data/regression.csv")
mydata
########################################################################################################
mydata <- read.csv("data/regression.csv")
mydata
head(mydata)
y <- cbind(mydata$birth_rate)
y
# 독립변수
x <- cbind(mydata$kindergarten)
fit <- ln(y~x,data=mydata)
summary(fit)
# 종속변수
y <- cbind(mydata$birth_rate)
y
# 독립변수
x <- cbind(mydata$kindergarten)
fit <- ln(y~x,data=mydata)
fit <- lm(y~x,data=mydata)
summary(fit)
plot(fit)
fit2 <- lm(log(y)~log(x),data=mydata)
summary(fit2)
plot(fit2)
shapiro.test(resid(fit))
fit <- lm(y~x,data=mydata)
summary(fit)
shapiro.test(resid(fit))
shapiro.test(resid(fit2))
fit3 <- lm(y~d,data = mydata)
summary(fit3)
fit3 <- lm(y~d,data = mydata)
summary(fit3)
fit3 <- lm(y~d,data = mydata)
d <- cbind(mydata$dummy)
fit3 <- lm(y~d,data = mydata)
summary(fit3)
plot(fit3)
#
#######################################################################################################
#다중 회귀 분석
# y=w1*x1+(w2 * x2)+(w3 * x3) + ... + b
#----------------------------------------------------------
state.a77
#######################################################################################################
#다중 회귀 분석
# y=w1*x1+(w2 * x2)+(w3 * x3) + ... + b
#----------------------------------------------------------
state.x77
as.data.frame(state.x77[,c("Murder","Population","llliteracy","Income","Frost")])
states <- as.data.frame(state.x77[,c("Murder","Population","llliteracy","Income","Frost")])
states <- as.data.frame(state.x77[,c("Murder","Population","Illiteracy","Income","Frost")])
states <- as.data.frame(state.x77[,c("Murder","Population","Illiteracy","Income","Frost")])
states
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost)
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost,state.x77)
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost,states)
summary(fit)
install.packages("car")
install.packages("car")
library(car)
vif(fit)
sqrt(vif(fit))
str(fit)
par(mfrow=c(1,1))
plot(fit)
influencePlot(fit,id=list(method="identify"))
influencePlot(fit,id=list(method="identify"))
### 회귀모형의 교정
# 정규분포에 대한 교정
par(mfrow=c(2,2))
plot(fit)
powerTransform(states$Murder)
summary(powerTransform(states$Murder))
##선형성에 대한 교정
box.tidwell(Murder~Population + Illiteracy,states)
##선형성에 대한 교정
boxtidwell(Murder~Population + Illiteracy,states)
##선형성에 대한 교정
boxTidwell(Murder~Population + Illiteracy,states)
states
##선형성에 대한 교정
boxTidwell(Murder~Population + Illiteracy,states)
##선형성에 대한 교정
boxTidwell(Murder~Population + Illiteracy,data=states)
## 등분산성에 대한 교정(등분산 만족 X 일때)
ncvTest(fit)
#  p = 0.18632 >0.05 필요없긴함
# 하지만 만약에 아니라면.. :
spreadLevelPlot(fit)
fit1 <- im(Murder ~. data=states)
fit1 <- lm(Murder ~. data=states)
fit1 <- lm(Murder ~. ,data=states)
summary(fit1)
fit2 <- lm(Murder ~ Population + Illiteracy,data = states)
summary(fit2)
#AIC(Akaike information criterion)
AIC(fit1,fit2)
#backword
full.model <- Im(Murder ~ . ,data = states)
reduced.modek <- step(full.model, direction = "backward")
#backword
full.model <- Im(Murder ~ . ,data = states)
reduced.modek <- step(full.model, direction = "backward")
#backword
full.model <- Im(Murder ~ .,data = states)
#backword
full.model <- Im(Murder~.,data = states)
reduced.modek <- step(full.model, direction = "backward")
#backword
full.model <- lm(Murder ~. ,data=states)
reduced.modek <- step(full.model, direction = "backward")
reduced.modek <- step(full.model, direction = "backward",trace= 0)
reduced.model <- step(full.model, direction = "backward",trace= 0)
reduced.model
#forward
min.model <- lm(Murder ~1 ,data=states)
#forward
min.model <- lm(Murder ~1 ,data=states)
fwd.model <- step(min.model,direction = "forward",
scope = (Murder~.))
fwd.model <- step(min.model,direction = "forward",
scope = (Murder~.))
summary(fwd.model)
fwd.model <- step(min.model,direction = "forward",
scope = (Murder~Population + Illiteracy + Income + Frost))
# stepwise는 중간에 멈춰버리는 경향이 있음
# all subset regresstion(모든 컬럼을 돌리는 함수)
install.packages("leaps")
library(leaps)
e <- regsubsets(Murder ~ Population + Illiteracy + Income + Frost,data=states,nbest = 4)
e
plot(e,scale = "adjr2")
per(mfrow=c(1,1))
plot(e,scale = "adjr2")
par(mfrow=c(1,1))
plot(e,scale = "adjr2")
plot(t(e),scale = "adjr2")
#######################################################################################################
### 로지스틱 회귀분석
#######################################################################################################
library(survival)
str(colon)
?colon
head(colon)
table(is.na(colon))
colon1 <- na.omit(colon)
#결측치 확인
table(is.na(colon1))
result <- glm(status ~ rx+sex+age+obstruct+perfor+adhere+nodes+differ+extent+surg,
family = binomial,data = colon1)
summary(result)
full.model <- lm(status ~. ,data=colon1)
reduced.model <- step(full.model, direction = "backward",trace= 0)
reduced.model
reduced.model <- step(result)
reduced.model
summary(reduced.model)
library(moonBook)
# oddsratio(발생 데이터 안에서) / 상대 위험도(전체 데이터 안에서)
extractOR(reduced.model) #oddsratio
fit1 <- glm(status ~ status ~ rx + obstruct + adhere + nodes + extent +
surg, family = binomial, data = colon1)
fit1 <- glm(status ~ rx + obstruct + adhere + nodes + extent +
surg, family = binomial, data = colon1)
fit2 <- glm(status ~ rx + obstruct + adhere + nodes + extent +
surg, family = quasibinomial, data = colon1)
summary(fit1)
pchisq(summary(fit2)$dispersion)
summary(fit1)$dispersion
pchisq(summary(fit2)$dispersion * fit1$df.residual) #dispersion 산포
fit1$df.residual
pchisq(summary(fit2)$dispersion * fit1$df.residual,fit1$df.residual,lower=F) #dispersion 산포
pchisq(summary(fit1)$dispersion * fit1$df.residual,fit1$df.residual,lower=F) #dispersion 산포
pchisq(summary(fit2)$dispersion * fit1$df.residual,fit1$df.residual,lower=F) #dispersion 산포
# 시각화
?ORplot()
ORplot(fit1)
ORplot(fit1,main="Plot for Odds Rations")
ORplot(fit1,main="Plot for Odds Rations",type = 2)
ORplot(fit1,main="Plot for Odds Rations",type = 3)
ORplot(fit1,main="Plot for Odds Rations",type = 4)
ORplot(fit1,main="Plot for Odds Rations",type = 5)
ORplot(fit1,main="Plot for Odds Rations",type = 2)
source('C:/Users/kjjs1/ProjectFileKim/Rwork/StatProject/6_Regression.R', encoding = 'UTF-8', echo=TRUE)
install.packages("car")
ORplot(fit1,main="Plot for Odds Rations",type = 4)
install.packages("car")
ORplot(fit1,main="Plot for Odds Rations",type = 4)
ORplot(fit1,main="Plot for Odds Rations",type = 4,show.OR = F)
ORplot(fit1,main="Plot for Odds Rations",type = 4,
show.OR = F,show.CI = T) # type : 그림 OR : obbsration 안보이게
ORplot(fit1,main="Plot for Odds Rations",type = 4,
show.OR = F,show.CI = T,pch=15) # type : 그림 OR : obbsration 안보이게
ORplot(fit1,main="Plot for Odds Rations",type = 2,
show.OR = F,show.CI = T,pch=15) # type : 그림 OR : obbsration 안보이게
ORplot(fit1,main="Plot for Odds Rations",type = 4,
show.OR = F,show.CI = T,pch=2) # type : 그림 OR : obbsration 안보이게
ORplot(fit1,main="Plot for Odds Rations",type = 2,
show.OR = F,show.CI = T,pch=2) # type : 그림 OR : obbsration 안보이게
install.packages("PairedData")
install.packages("pwr")
install.packages(c("nparcomp", "reshape", "userfriendlyscience"))
install.packages("UsingR")
install.packages("leaps")
#어떤 학급의 수학 평균성적이 55점이였다. 0교시 수업을 시행학 나서 학생들의 성적을 살펴보았다.
a <- c(58,49,39,99,32,88,62,30,55,65,44,55,57,53,88,42,39)
shapiro.test(a)
t.test(a,mu=55,alternative = "greater")
t.test(a,mu=55,alternative = "greater")
# W = 0.98274, p-value = 0.9781 p>0.05 정규분포다 (매우)
var.test(a)
# p-value = 0.602 p>0.05 1000 시간이라고 볼수 있다
/t.test()
# p-value = 0.602 p>0.05 1000 시간이라고 볼수 있다
?t.test()
# W = 0.98274, p-value = 0.9781 p>0.05 정규분포다 (매우)
var.test(a,1000)
?var.test
# p-value = 0.602 p>0.05 1000 시간이라고 볼수 있다
?t.test()
plot(women$weight~women$height,women)
##### 단순 선형회귀 #####
# y = wx + b
#--------------------------
str(women) # 미국여성 대상으로 키와 몸무게 조사(30~39세) : 인치와 파운드
women
plot(women$weight~women$height,women)
fit <- lm(weight~height,women) #linear model 선을 찾아주는 함수
summary(fit) # 좀더 많은 정보를 확인할수 있다.
abline(fit,col="red")
cor.test(women$weight,women$height)
# 다항 회귀 분석
fit2 <- lm(weight~height + I(height^2),data = women)
summary(fit2)
plot(women$weight~women$height,women)
lines(women$height,fitted(fit2),col="blue")
fit
summary(fit) # 좀더 많은 정보를 확인할수 있다.
cor.test(women$weight,women$height)
#######################################################################################################
#다중 회귀 분석
# y=w1*x1+(w2 * x2)+(w3 * x3) + ... + b
#----------------------------------------------------------
state.x77
states <- as.data.frame(state.x77[,c("Murder","Population","Illiteracy","Income","Frost")])
states
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost,states)
summary(fit)
install.packages("car")
library(car)
str(fit)
sqrt(vif(fit)) # 2를 넘어가면 다중 공산성에 문제가 있다
summary(fit)
library(moonBook)
# 연속변수가 아니라면 Kruskal-wallis H Test
# 정규분포가 아니라면 Kruskal-wallis H Test
# 등분산이 아니라면 welch's anova
# ANOVA 사용(다 통과되면)
# 사후검정 : Tukey
library(rlang)
# 연속변수가 아니라면 Kruskal-wallis H Test
# 정규분포가 아니라면 Kruskal-wallis H Test
# 등분산이 아니라면 welch's anova
# ANOVA 사용(다 통과되면)
# 사후검정 : Tukey
install.packages("rlang")
library(moonBook)
library(rlang)
library(moonBook)
install.packages("glue")
library(rlang)
library(moonBook)
install.packages("pillar")
library(rlang)
library(moonBook)
install.packages("crayon")
library(rlang)
library(moonBook)
install.packages("tibble")
library(rlang)
library(moonBook)
install.packages("purrr")
library(moonBook)
install.packages("tidyselect")
library(moonBook)
install.packages("dplyr")
library(moonBook)
install.packages("insight")
library(moonBook)
install.packages("forcats")
library(moonBook)
install.packages("vctrs")
library(moonBook)
install.packages("hms")
library(moonBook)
install.packages("haven")
library(moonBook)
install.packages("sjlabelled")
library(rlang)
library(moonBook)
install.packages("sjmisc")
library(moonBook)
install.packages("stringi")
library(moonBook)
install.packages("moonBook")
library(moonBook)
View(acs)
